Documentation
FDRFilterer, DM0Solver, TrunkSolver, PDMTableMaker, SiteSolver and Sticker modules were implemented in Python 3 and can be used in both Windows and Linux operating systems. It is currently compatible with conventional LC-MS/MS data and can be used with common proteolytic enzymes (including trypsin and Lys-C). FDRFilterer FDRFilterer filters FDR according to the conditions set by the user, in the configuration file.   Input files:     * .tsv , for example output file of PeakFDRer, but other can be use.    * Configuration file (.ini). Default configuration file can be modified by user.      o FDRFilterer parameters:                 * GlobalThres:  global FDR threshold. Maximum Global FDR.        * PeakThres: peak FDR threshold. Maximum Peak FDR.        * LocalThres: local FDR threshold. Maximum Local FDR.        * GlobalFDR_column_name: name of the column containing Global FDR values.        * PeakFDR_column_name: name of the column containing Peak FDR values.        * LocalFDR_column_name: name of the column containing Local values.        * Label_column_name:  name of the column that indicates label.        * decoys_naming:  parameter that indicates how decoys are named.       Output files:     * FDRFilterer output (default suffix: “FDRFilterered”)     * A log file (default suffix: " FDRFilterered_logFile") DM0Solver DM0Solver is a module that detects whether a modified peptide, termed as pdm (a peptide form defined by peptide sequence, ?mass and position) from here on, has a ?mass belonging to a list provided by the user , for that purpose relative error (ppm) is calculated. In such a case, the ?mass is appended at the end of the clean sequence (new output column). The corresponding label and the error generated selecting that label are added in two additional columns . If the ?mass does not belong to the list, the module passes the modified sequence without any modification to the output columns. To carry out these tests, the relative error (ppm) must be calculated: DM0Solver needs the following input files:     * .tsv file, for instance ouput file of FDRFilterer.     * Configuration file (.ini), a default configuration file that can be modified by user, containing:      o DM0Solver parameters:         * Relative_Error_ppm: relative error (ppm) allowed.        * Exp_mh_column_name: calibrated experimental mh column name.         * Theo_mh_column_name: theoretical mh column name.                   * Sequence_column_name: sequence with ?mass column name.         * DM0Sequence_output_column_name: column name of the output in which the selected sequence is annotated.        * DM0Label_output_column_name: column name of the output in which the chosen label is annotated.        * DM0Label_ppm_output_column_name: column name of the output in which the calculated error in ppm is annotated.        * output_file_suffix: chosen suffix for output file.       o DM0Solver list (list of masses with their corresponding label):        The first column should show examples of labels , while the second column contains de mass in Da of each label. DM0Solver uses this list to assign a label, as long as it meets the error threshold.It delivers two output files:     * DM0Solver oztput (default suffix: “DM0S”)        o New columns:         * DM0Sequence: output column in which the reassigned sequence is annotated.        * DM0Label: output column in which the selected label is annotated.        * DM0Label_ppm:  output column in which the error, that is obtained selecting the label, is annotated.        * A log file (default suffix: "DS_logFile") TrunkSolver TrunkSolver detects whether the ?mas, in a pdm element may be explained by the truncation of a non-modified peptide inside the sequence of the corresponding protein or, by a truncation and the presence of a ?mass belonging to a list provided by the user , for that purpose relative error (ppm) is calulated. In such a case, the ?mass is appended at the end of the clean sequence (“TrunkSequence” output column), while the corresponding label and the recalculated ?mass are added in additional columns named “TrunkLabel” and “TrunkDM”, respectively. If TrunkSolver is unable to explain the ?mass by a truncation, then it passes the modified sequence and its original ?mass without any modification to the output columns. In both cases five extra columns.(“New_DM”,“New_Theo_mh”,“Match_number”,“Possible_option”, “Trunk_stats_mods”) will be created for subsequent PeakAssignatior (Andrea Laguillo ongoing thesis) execution, which is necessary for the correct peak assignation. Relative error will be calculated as: TrunkSolver needs as input files:     * .tsv file     * .fasta file     * MassMod.ini. Default configuration file can be modified by user.    * Configuration file (.ini). Default configuration file can be modified by user:       o TrunkSolver parameters:         * Relative_Error_ppm: relative error (ppm) allowed.        * Exp_mh_column_name: calibrated experimental mh column name.        * Theo_mh_column_name: theoretical mh column name.                   * Sequence_column_name: sequence with ?mass column name.        * Calibrated_Delta_MH_column_name: calibrated ?mass mh column name.        * MasterProtein_column_name: master Protein column name.        * static_modifications_column_name: static modifications column name.        * Decnum: decimals points required in TrunkSequence column.        * X:  number of positions to the right and left, that the TrunkSolver is allowed to extend from the original ?mass site.        * New_Deltamass_output_column_name: new ?mass column name.        * New_Theo_mh_output_column_name: new theoretical mh column name.        * TrunkSequence_output_column_name: column name of the output where the chosen sequence is annotated.        * TrunkDM_output_column_name: column name of the output where the recaulcutaed ?mass is annotated, taking in to account the label.          * TrunkLabel_output_column_name: column name of the output where the chosen label is annotated.        * TrunkLabel_ppm_output_column_name: column name of the output where the calculated error in ppm is annotated.        * Static_modifications_position_output_column_name: column name of the output where the new fix modifications positions are annotated          * Matchnumber_output_column_name: column name of the output where possible options number is annotated.        * Possible_option_output_column_name: column name of the output where all possible options.        * output_file_suffix:  chosen suffix for output file.      o TrunkSolver list (list of masses with their corresponding label).       .The first column must contain labels,  and the second de delta mass.TrunkSolver delivers the following output files:     * TrunkSolver output (default suffix: “_TS”)       o New columns:         * TrunkSequence: output column name in which reassigned sequence is annotated        * Trunk_DM:  output column name in which recalculated ?mass taking in to account the labels.        * Trunk_Label: output column name in which the selected label is saved.  If the ?mass corresponds to a combination between one of the labels in the configuration file and a cut, the type of cut also will be noted. The label will be TrypticCut if the choice of label involves a tryptic cut of the sequence, or a Truncation if it involves a non-tryptic cut.        * Trunk_Label_ppms: output column in which the error, that is obtained selecting the label, is annotated.        * New_Theo_Mh: output column name in which the recalculated theoretical mass is annotated.        * New_DM: output column name in which the recalculated ?mass is saved.        * Trunk_stats_mods:  output column name in which the new static modifications positions are saved, since with the changes in the sequence this could vary.        * Match_number: output column name in which the number of possible options allowed by TrunkSolver is annotated.        * Possible_options: output column name in which all possible options allowed by TrunkSolver are annotated       * A log file (default suffix: "TS_logFile")       PDMTableMaker, SiteSolver PDMTableMakertMaker is an independent, but necessary, module for the proper operation of SiteSolver.  PDMTableMaker contains the frequencies of the different sequence species (pdm) which allows SiteSolver to choose when there is a tie between two positions.  SiteSolver will correct ?mass positions whenever appropriate.  PDMTableMaker PDMTableMaker calculates the scan frequency which is used by SiteSolver but also some parameters that will allow to build the necessary relations files for the subsequent processing of the results by the statistical quantitation workflow, as it will be later explained:  p, q, pdm, pd, d, Theo_mh, ScanFreq, a, m, n, l, qna, qdna, A, M, L, N, qdNA. PDMTableMaker input files:      * tsv file.     * .fasta file.      * Configuration file (.ini). Default configuration file can be modified by user:        o PDMTableMaker parameters:          * Sequence_column_name:  Sequence that contains the ?mass colum name.         * DM_column_name:  ?mass column name.          * Theo_mh_column_name: Theoretical mh column name.           * MasterProtein_column_name:  Master Protein column name.         * output_file_suffix:  Chosen suffix for output file.        o PDMTableMaker conditions:           * number_of_conditions: Number of conditions considered.          * Conditioni:  Column name of condition i.           * Valuei: Chosen value for condition i.The program can use as many conditions as it is desired, considering that a match will be made between the conditioni and the valuei. PDMTableMaker delivers two output files:     * PDMTableMaker output (default suffix: “PDM”). .      o New columns:         * p: peptide.        * pdm: peptide form defined by peptide sequence, ?mass and position. Ex: ABCD[xxx]EFGHK.        * pd: ABCEDEFGHK:XXX (includes a set of pdm elements, do not confound with ABCEDEFGHK_XXX, which is a pdm, not a pd)         * m: position in peptide. Ct (C-terminal) =-1, Nt (Nterminal)=0.         * l: position in peptide, from right to left. Ct=,0 Nt = -1.        * n: position in protein. Ct =length peptide plus 1, Nt = 0.        * a: modified aminoacid. Ct = U, Nt = U.        * q: protein identifier.        * M: it is the m corresponding to the pdm with highest original PSM frequency in a pdm table.        * L:   l which corresponds with the razor m. Razor l, property of a pd.        * N:  n which corresponds with the razor m. Nt=0. Razor n, property of a pd.        * A:  a which corresponds with the razor m. Razor a, property of a pd.         * qdna: information of q,d,n,a (ex: HPT:yyy:300:M)         * qna: information of q,n,a (ex: HPT: 300:M)         * qdNA: razor qdna, property of a pd         * Theo_mh: Theoretical mh         * ScanFreq: Scan frequency            * A log file (default suffix: " PDM_logFile") SiteSolver SiteSolver is a module made with the aim of detecting if a modified peptide has its ?mass in an incorrect position. In such a case, ?mass location within the sequence is corrected in the “SiteSequence” column.  If the module does not find any possible position, it passes the modified sequence without any modification to the output column. Foremost, it is ascertained whether the amino acid position, in which the ?mass is originally located, is prohibited. This is tested up using the frequency chosen in the PrimaryList file (PrimaryList_colum_name) and ScanFrequency of PDMTableMaker ouput file. From the lists, the mass with the lowest relative error of place will be chosen.. If the amino acid is allowed, for that ?mass, it passes the modified sequence without any modification. If the amino acid is prohibited, SiteSolver will analyze the contiguous amino acids to that position. Provided that only one of them is prohibited the sequence will be corrected by assigning the ?mass to the amino acid that is allowed, according to PrimaryList or SecondayList file. If both are allowed, for that ?mass, the position with the highest frequency in the PDMTableMaker output file is chosen, but if the frequencies are equal, it will be taken into account the order of appearance in the PrimaryList or SecondayList file. If none of the amino acids are allowed, the contiguous, at each end, will be analyzed. The process is repeated until the number of positions to be analyzed, on each side, exceeds the maximum (X parameter). To carry out these tests, the relative error must be calculated:  SiteSolver needs the following input files:     * .tsv file.    * PDMTableMaker output file.    * PrimaryList.txt file (user).    * SecondaryList.txt file (unimod).  	Secondary and Primary lists will contain 3 columns:             1) DM: first column must contain the ?mass.           2) Residue:  second column must contain the residue. In case of N-terminal and C-terminal, must appear, NT and CT respectively.    * Configuration file (.ini). Default configuration file can be modified by user:       o SiteSolver parameters:                 * Relative_Error_ppm: relative error (ppm) allowed.        * Theo_mh_column_name:  theoretical mh column name.           * Sequence_column_name: sequence with ?mass column name.         * cal_Dm_mh_column_name: calibrated ?mass MH name.        * PeakNaming: Parameter that indicates how peaks are named.        * PeakAssignation_column_name: name of column that contains peak assignation.        * x: parameter that indicates the extension (left and right) from the original DM site of the amino acid positions to be analyzed.        * MinScanFreq: parameter that indicates the frequency threshold for PDMTableMaker output file.         * MaxNSite: parameter that indicates the number of amino acids allowed when the PDMTableMaker output file is analyzed.        * PrimaryList_column_name: column name from Primary List wanted to be used for SiteSolver.        * SecondaryList_column_name: column name from Secondary List wanted to be used for SiteSolver.        * SiteCorrection_PrimaryList_label: SiteCorrection when the SiteList selected is from the Primary list.        * SiteCorrection_SecondaryList_label: SiteCorrection when the SiteList selected is from the Secondary list.        * SiteSequence_column_name: column name of the output in which the sequence is annotated.        * SiteCorrection_column_name: column name of the output in which the correction site is annotated,        * SiteOption_column_name: column name of the output in which the different possible options are annotated.        * SiteDM_column_name: column name of the output in which the selected ?mass is annotated.        * SiteDMError_ppm_column_name: column name of the output where the error of the selected DM is annotated.        * Output_file_suffix: chosen suffix for output file.  SiteSolver delivers two output files:     * SiteSolver output (default suffix: “SS”)     o New output columns:         * SiteSequence: sequence with the ?mass.       * SiteCorrection: initial residue (position that has been displaced) and final residue.       * SiteOption: if there is a tie, which are all the possible options.    * A log file (default suffix: " SS_logFile") Sticker Sticker is a module that for each experimental ?mass detects,by calculating the relative error the closest theoretical one from a DMID_list  file . This file will contain some conditions and labels. When comparing PDMTabelMaker output file with DMID_list, all the conditions established in DMID_list, the labels and the error that produces the corresponding label selection, will be annotated in new columns. To do so, the relative error will be calculated: As input files Sticker requires:     * PDMTableMaker output file     * DMID_list.txt:      o Column names:         * d:  Column with the ?mass.        *  Cond_:  all columns with the conditions that must be met, should start with “Cond_a_”. If “a” has to be met, a column named “Cond_a” must appear in he DMID_list.txt file. It should be noted that the columns denoting conditions must include after the prefix "Cond_" (condition), names of the columns present in PDMTableMaker, for instance "Cond_d", "Cond_p", "Cond_pdm". If the indicated parameter is not found in the PDMTableMaker file, the comparison will not be possible. The name of the columns that contains the label to be added will begin with the prefix "Lab_".The label for those rows that do not have any label will be specified at the first line of the DMID_list file. All columns will be empty except for the first column that will start with “Lab_” .    * Configuration file (.ini). Default configuration file can be modified by user:       o Sticker parameters:     * Relative_Error_ppm: relative error (ppm) allowed.    * Theo_mh_column_name: theoretical mh column name.        * Sequence_column_name: sequence with ?mass column name.     * Selected_DM_column_name: selected ?mass column name.    * StickerLabel_User_output_column_name:  column name of the output where the chosen label is annotated.    * StickerLabel_ppm_User_output_column_name: column name of the output where the calculated error in ppm for the selected label is annotated.      * output_file_suffix:  chosen suffix for output file.  It delivers two output files:     * Sticker output (default suffix: “Sticker”):     o New columns:        * StickerLabel: selected label from the user file. It will appear as many StikerLabel columns as “Lab_” columns appear in DMIDlist file.        * StickerLabel_ppm: relative error calculated with the mass of the selected label from the user file. It will appear as many StikerLabel_ppm columns as “Lab_” columns appear in DMIDlist file.       * A log file (default suffix: "Sticker_logFile").